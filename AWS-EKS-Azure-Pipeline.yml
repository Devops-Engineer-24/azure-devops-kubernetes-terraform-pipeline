# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: docker-agent

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: TerraformTaskV4@4
  inputs:
    provider: 'aws'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
    backendServiceAWS: 'Azure-to-AWS'
    backendAWSBucketName: 'terraform-backend-azure-pipeline'
    backendAWSKey: 'Kubernetes-Backend.tfstate'
# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'aws'
#     command: 'validate'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
- task: TerraformTaskV4@4
  inputs:
    provider: 'aws'
    command: 'apply'
    environmentServiceNameAWS: 'Azure-to-AWS'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
    backendServiceAWS: 'Azure-to-AWS'
    backendAWSBucketName: 'terraform-backend-azure-pipeline'
    backendAWSKey: 'Kubernetes-Backend.tfstate'
# - task: TerraformTaskV4@4
#   inputs:
#     provider: 'aws'
- task: TerraformTaskV4@4
  inputs:
    provider: 'aws'
    command: 'destroy'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes'
    environmentServiceNameAWS: 'Azure-to-AWS'
    backendServiceAWS: 'Azure-to-AWS'
    backendAWSBucketName: 'terraform-backend-azure-pipeline'
    backendAWSKey: 'Kubernetes-Backend.tfstate'